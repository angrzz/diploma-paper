import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm

PARAM_ORDER = ["HR", "RespRate", "Temp", "NIMAP", "Urine"]
N_SEGMENTS = 6
ALPHABET_SIZE = 5

df = pd.read_csv("/mnt/data/df_long_132539.csv")

df = df[df["parameter"].isin(PARAM_ORDER)].copy()

t_min = df["time_min"].min()
t_max = df["time_min"].max()
window = (t_max - t_min) / N_SEGMENTS
df["segment"] = ((df["time_min"] - t_min) / window).astype(int)
df.loc[df["segment"] >= N_SEGMENTS, "segment"] = N_SEGMENTS - 1

# 4) Z–нормализация значений внутри каждого параметра
df["value_z"] = df.groupby("parameter")["value"].transform(
    lambda x: (x - x.mean()) / x.std(ddof=0)
)

# 5) PAA: усреднение по сегментам
paa = df.groupby(["segment", "parameter"])["value_z"] \
        .mean() \
        .unstack(level="parameter") \
        .reindex(index=range(N_SEGMENTS), columns=PARAM_ORDER)

# 6) Символизация SAX
quantiles = np.linspace(0, 1, ALPHABET_SIZE + 1)[1:-1]
breakpoints = norm.ppf(quantiles)
symbols = paa.applymap(lambda v: np.digitize(v, breakpoints) if pd.notnull(v) else np.nan)

# 7) Построение MTSA-визуализации
angles = np.linspace(0, 2 * np.pi, len(PARAM_ORDER), endpoint=False).tolist()
angles += angles[:1]

fig = plt.figure(figsize=(6,6))
ax = fig.add_subplot(111, polar=True)

for i, row in symbols.iterrows():
    vals = row.tolist() + [row.tolist()[0]]
    ax.plot(angles, vals, linewidth=1, label=f"Segment {i+1}")

ax.set_xticks(angles[:-1])
ax.set_xticklabels(PARAM_ORDER)
ax.set_yticks(range(ALPHABET_SIZE))
ax.set_ylim(0, ALPHABET_SIZE - 1)
ax.legend(loc="upper right", bbox_to_anchor=(1.3, 1.1))
plt.title("MTSA Visualization (SAX symbols)")
plt.tight_layout()
plt.show()

